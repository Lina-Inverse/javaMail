package mail;

import java.util.Date;

import javax.mail.Address;
import javax.mail.Message;
import javax.mail.Message.RecipientType;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

/**
 * 简单邮件发送器  不带附件的
 * @author lenovo
 *
 */
public class SimpleMailSender {

	/**
	 * 文本格式的发送
	 * @param mailInfo
	 */
	public static boolean sendTextMail(MailSendInfo mailInfo) {
		//判断是否需要身份认证
		MyAuthenticator authenticator = null;
		
		if (mailInfo.isValidate()) {
			//如果需要身份证认  创建一个身份认证器
			authenticator = new MyAuthenticator(mailInfo.getUserName(), mailInfo.getPassword());
		}
		
		try {
			//根据邮件会话属性和密码认证器创建一个session
			Session mailSession = Session.getInstance(mailInfo.getProperties(), authenticator);
			//根据session创建一个邮件消息
			Message message = new MimeMessage(mailSession);
			//发送者地坦
			Address from = new InternetAddress(mailInfo.getFromAddress());
			message.setFrom(from);
			//接收者
			Address to = new InternetAddress(mailInfo.getToAdderss());
			message.setRecipient(RecipientType.TO, to);
			
			//设置邮件主题
			message.setSubject(mailInfo.getSubject());
			message.setText(mailInfo.getContext());
			message.setSentDate(new Date());
			
			Transport.send(message);
			
			return true;
		} catch (AddressException e) {
			e.printStackTrace();
		} catch (MessagingException e) {
			e.printStackTrace();
		}
		
		return false;
		
	}
	
	
	/**
	 * 发html的格式发送
	 * @param maiInfo
	 * @return
	 */
	public static boolean sendHtmlMail(MailSendInfo mailInfo){
		
		MyAuthenticator authenticator = null;
		
		//判断是否需要身份验证
		if (mailInfo.isValidate()) {
			authenticator = new MyAuthenticator(mailInfo.getUserName(), mailInfo.getPassword());
		}
		
		Session session = Session.getInstance(mailInfo.getProperties(), authenticator);
		
		
		
		
		return false;
	}
	
	
}
